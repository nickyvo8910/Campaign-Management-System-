/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Kernel.CommonConnection;
import Kernel.LoginPC;
import Kernel.Validation;
import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.text.JTextComponent;

public class Login extends javax.swing.JFrame {
    public static String EmpID;
    public static boolean status;
    public static boolean admin;
    public static boolean config;
    private String serverName;
    private String dbName;
    private String port;
    private String sa;
    private String sapass;
    public Login() {
        initComponents();
        this.setTitle("CIS-Login");
        this.setSize(455, 350);
        this.setResizable(false);
        //Code to disable config panel if connection has already existed
        if(CommonConnection.conn==null){
         stt_showcfg.setVisible(true);
         }else{
         stt_showcfg.setVisible(false);
         }
        
        //Code to hide config panel      
        stt_showcfg.setText("Click here to show server config");
        pn_config.setVisible(false);
    }

    /*---Create Database---*/
    private void createDatabase(String host,String port,String account,String password,String database){     
        try{
            String create;
            PreparedStatement pst;
            ResultSet rs;
            
            //Setup connection
            
            CommonConnection.conn=CommonConnection.getCommonConnection(host, port, "MASTER", account, password);
            if(CommonConnection.conn == null){
                Validation.showMess("Cannot connect to MASTER using current config");
                return;
             }
            //Use Database
            String useMASTER;
            useMASTER="USE MASTER";
            pst= CommonConnection.conn.prepareStatement(useMASTER);
            pst.executeUpdate();
            
            // Check Existance
            String Exist;
            Exist = "IF  EXISTS (SELECT name FROM sys.databases WHERE name = '"+database+"') "
                    + "BEGIN "
                    + "alter database [CIS] SET SINGLE_USER WITH ROLLBACK IMMEDIATE "
                    +"DROP DATABASE ["+database+"] "
                    + "END";
            pst= CommonConnection.conn.prepareStatement(Exist);
            pst.executeUpdate();
            
            //Create Database
            String sql="";
            String temp;
            create="CREATE DATABASE " + database;
            pst= CommonConnection.conn.prepareStatement(create);
            pst.executeUpdate();
            
            //Use Database
            create="USE " + database;
            pst= CommonConnection.conn.prepareStatement(create);
            pst.executeUpdate();
            InputStream in = null;
            //Create Tables
            try{
               in = ClassLoader.getSystemResourceAsStream("tables.txt");
            }
            catch(Exception err){
                Validation.showMess("Can't Read Demo File");
            }
         //   FileReader fis=new FileReader("./src/tables.txt");
            BufferedReader  bis = new BufferedReader(new InputStreamReader(in));
            while((temp=bis.readLine())!= null){
                if(temp.equalsIgnoreCase("GO")){
                    pst= CommonConnection.conn.prepareStatement(sql);
                    pst.executeUpdate();
                    sql="";
                }
                else
                    sql=sql + temp;
            }
            in.close();
            bis.close();
            
        }
        catch(Exception e){
            e.printStackTrace();
           JOptionPane.showMessageDialog(rootPane, e.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btn_login = new javax.swing.JButton();
        btn_exit = new javax.swing.JButton();
        txt_Id = new javax.swing.JTextField();
        txt_Pass = new javax.swing.JPasswordField();
        stt_showcfg = new javax.swing.JLabel();
        pn_config = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btn_save = new javax.swing.JButton();
        btn_def = new javax.swing.JButton();
        txt_serverName = new javax.swing.JTextField();
        txt_dbName = new javax.swing.JTextField();
        txt_sa = new javax.swing.JTextField();
        txt_saPass = new javax.swing.JPasswordField();
        jLabel8 = new javax.swing.JLabel();
        txt_port = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Campaign Information System");
        setPreferredSize(new java.awt.Dimension(450, 550));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Username: ");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(84, 120, 70, 20));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Password:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, 60, 20));

        btn_login.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/btnLogin.png"))); // NOI18N
        btn_login.setText("Login");
        btn_login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_loginActionPerformed(evt);
            }
        });
        getContentPane().add(btn_login, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 190, -1, -1));

        btn_exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/btnCancel.png"))); // NOI18N
        btn_exit.setText("Exit");
        btn_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_exitActionPerformed(evt);
            }
        });
        getContentPane().add(btn_exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 190, 83, -1));

        txt_Id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_IdActionPerformed(evt);
            }
        });
        getContentPane().add(txt_Id, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 120, 155, -1));
        getContentPane().add(txt_Pass, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 150, 155, -1));

        stt_showcfg.setFont(new java.awt.Font("Tahoma", 3, 13)); // NOI18N
        stt_showcfg.setForeground(new java.awt.Color(51, 102, 255));
        stt_showcfg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconAlert.png"))); // NOI18N
        stt_showcfg.setText("Click here to hide server config");
        stt_showcfg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stt_showcfgMouseClicked(evt);
            }
        });
        getContentPane().add(stt_showcfg, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 240, 235, -1));

        pn_config.setBackground(new java.awt.Color(255, 255, 255));
        pn_config.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Server Config", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Agency FB", 1, 10), new java.awt.Color(0, 153, 153))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Server Name:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Database Name:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Username:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Password:");

        btn_save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/btnSave.png"))); // NOI18N
        btn_save.setText("Save");
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });

        btn_def.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/btnDefault.png"))); // NOI18N
        btn_def.setText("Default");
        btn_def.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_defActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Port:");
        jLabel8.setToolTipText("");

        javax.swing.GroupLayout pn_configLayout = new javax.swing.GroupLayout(pn_config);
        pn_config.setLayout(pn_configLayout);
        pn_configLayout.setHorizontalGroup(
            pn_configLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_configLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(pn_configLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pn_configLayout.createSequentialGroup()
                        .addGroup(pn_configLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pn_configLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_serverName)
                            .addComponent(txt_dbName)
                            .addComponent(txt_sa)
                            .addComponent(txt_saPass, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_port, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pn_configLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_save)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_def)
                        .addGap(77, 77, 77)))
                .addGap(32, 32, 32))
        );
        pn_configLayout.setVerticalGroup(
            pn_configLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_configLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pn_configLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txt_serverName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pn_configLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txt_dbName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txt_port, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pn_configLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txt_sa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pn_configLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txt_saPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pn_configLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_def)
                    .addComponent(btn_save))
                .addContainerGap(57, Short.MAX_VALUE))
        );

        getContentPane().add(pn_config, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 410, 270));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/bgLogin.jpg"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_exitActionPerformed
        //Code lead to System's Exit
        System.exit(0);
    }//GEN-LAST:event_btn_exitActionPerformed

    private void stt_showcfgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stt_showcfgMouseClicked
        //Code to show or hide config panel on demand
        if(stt_showcfg.getText().equals("Click here to hide server config")){
            
            pn_config.setVisible(false);
            stt_showcfg.setText("Click here to show server config");
            this.setSize(455, 350);
        }
        else if(stt_showcfg.getText().equals("Click here to show server config")){
            this.setSize(455, 580);
            pn_config.setVisible(true);
            stt_showcfg.setText("Click here to hide server config");
        }
    }//GEN-LAST:event_stt_showcfgMouseClicked

    private void txt_IdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_IdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_IdActionPerformed

    private void btn_loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_loginActionPerformed
        if(config==false){
           // CommonConnection.conn = CommonConnection.getCommonConnection("CIS", "sa", "12345678");
            Validation.showMess("Please configure server first");
            return;
        }else{
            CommonConnection.conn = CommonConnection.getCommonConnection(serverName, port, dbName, sa, sapass);
        }
        if(CommonConnection.conn==null){
            Validation.showMess("Invalid Config Info");
        }
        Vector log_vt = LoginPC.getEmployeeInformation();
        String log_id = txt_Id.getText().trim();
        String log_pass = new String(txt_Pass.getPassword());
        boolean err=false;
        
        
        if(Validation.isEmpty(log_id)){
            err=true;
            Validation.showMess("ID Field is Empty");
            txt_Id.requestFocus();
        }
        else if(!Validation.checkContent(log_id)){
            err=true;
            Validation.showMess("Invalid UserName");
            txt_Id.requestFocus();
        }else if(Validation.isEmpty(log_pass)){
            err=true;
            Validation.showMess("Password Field is Empty");
            txt_Pass.requestFocus();
        }
        //System.out.println("Number of Current Registed User : "+log_vt.size());
        for(int i=0 ; i<log_vt.size();i++)
            {
                Vector temp=(Vector) log_vt.get(i);
                if(log_id.equals(temp.get(0).toString())&&log_pass.equals(temp.get(6).toString())){
                    //Login info is valid
                    status=true;
                    EmpID = log_id;
                    if(temp.get(1).toString().equals("1")){
                      //User has ADMIN permission
                        admin=true;
                    }
                    else{
                        admin=false;
                    }
                }
                
        }
        System.out.println("Loged In : "+status);
        System.out.println("Is Admin : "+admin);
        if(status){
            this.setVisible(false);            
            new Home().setVisible(true);
        }
        else if(!status && (CommonConnection.conn != null)&& (err==false)){
            JOptionPane.showMessageDialog(null, "Invalid Login Info");
            txt_Id.requestFocus();
        }
        
    }//GEN-LAST:event_btn_loginActionPerformed

    private void btn_defActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_defActionPerformed
        txt_serverName.setText("localhost");
        txt_dbName.setText("CIS");
        txt_port.setText("1433");
        txt_sa.setText("sa");
        txt_saPass.setText("12345678");
        
        this.serverName = "localhost";
        this.dbName="CIS";
        this.port="1433";
        this.sa="sa";
        this.sapass="12345678";
    }//GEN-LAST:event_btn_defActionPerformed

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
        if(!Validation.validateComponents(new JTextComponent[] {txt_serverName,txt_dbName,txt_port,txt_sa,txt_saPass})){
            return;
        }
        new ShowMessageDialog(null, true,"<html><Center>Do you really want save new Config?</Center></html>",ShowMessageDialog.CONFIRM);
        if(ShowMessageDialog.STATUS==ShowMessageDialog.OK)
        {
            this.serverName =txt_serverName.getText().trim();
            this.dbName=txt_dbName.getText().trim();
            this.port=txt_port.getText().trim();
            this.sa=txt_sa.getText().trim();
            this.sapass=txt_saPass.getText().trim();
            this.config = true;
        
            Validation.showMess("Configuration Saved!!!");
            CommonConnection.conn = CommonConnection.getCommonConnection(serverName, port, "MASTER", sa, sapass);
            
            if(CommonConnection.conn==null){
            Validation.showMess("Invalid Config Info");
            }
            else{
             CommonConnection.conn = null;
             CommonConnection.conn = CommonConnection.getCommonConnection(serverName, port, dbName, sa, sapass);
                if(CommonConnection.conn != null){
                    ShowMessageDialog.STATUS = ShowMessageDialog.CANCEL;
                    Validation.showMess("Existed Data has been found");
                    new ShowMessageDialog(null, true,"<html><Center>Do you want to use it or create a new one ?<br>!!!CREATING CAUTION!!!<br>All data that conflict with our Demo will be deleted as well.</Center></html>",ShowMessageDialog.CONFIRM);
                    if(ShowMessageDialog.STATUS==ShowMessageDialog.OK){
                        createDatabase(serverName, port, sa, sapass, dbName);
                        Validation.showMess("New database has been created");
                    }  
                }else{
                    Validation.showMess("<html>No existed data has been found<br>New database has been created for your convenience</html>");
                    createDatabase(serverName, port, sa, sapass, dbName);
                }
            }             
        }
    }//GEN-LAST:event_btn_saveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_def;
    private javax.swing.JButton btn_exit;
    private javax.swing.JButton btn_login;
    private javax.swing.JButton btn_save;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JPanel pn_config;
    private javax.swing.JLabel stt_showcfg;
    private javax.swing.JTextField txt_Id;
    private javax.swing.JPasswordField txt_Pass;
    private javax.swing.JTextField txt_dbName;
    private javax.swing.JTextField txt_port;
    private javax.swing.JTextField txt_sa;
    private javax.swing.JPasswordField txt_saPass;
    private javax.swing.JTextField txt_serverName;
    // End of variables declaration//GEN-END:variables
}
